// Enable DSL2 syntax and other useful nextflow features
nextflow.enable.dsl = 2
nextflow.enable.moduleBinaries = true

/* Pipeline Information
---------------------------------------------------------------------------- */
manifest {
    name            = "Nextflow RNA-Seq Pipeline"
    description     = "A nextflow project for running RNA-Seq using salmon."
    version         = "0.2.0"
    author          = "Kyle Schaubroeck"
    mainScript      = "main.nf"
    nextflowVersion = "!>=22.10.6" // Kills the script if Nextflow does not meet the version requirments
}

/* Profiles
---------------------------------------------------------------------------- */

// Standard is the default profile when one is not specified by the user
// Currently this is the only profile but this might change one day.
profiles {
    standard {
        docker.enabled       = true
        // Emulation mode works on deepthought but not compute01
        // docker.userEmulation = true // Run docker as the current user, not the root user

        // This method of runnign `as user` works on compute01
        docker.runOptions = '--user $(id -u) -e "HOME=${HOME}" -v $HOME:$HOME'
    }
}

/* Parameters
---------------------------------------------------------------------------- */
params {
    disableCache = false
    clean = true
    dev       = false
    devInputs = 2
    help      = false
}

// Auto-clean workdir after completion
cleanup = params.clean

/* External config
// ---------------------------------------------------------------------------- */
includeConfig './config/computing-resources.config'
includeConfig './config/output.config'
includeConfig './config/tools.config'
includeConfig './subworkflows/rnaseq.config'

/* Event handlers
---------------------------------------------------------------------------- */
workflow.onComplete = {
    println"""\u001B[34m
    Pipeline execution summary
    ---------------------------
    Completed at: ${workflow.complete}
    Duration    : ${workflow.duration}
    Success     : ${workflow.success}
    workDir     : ${workflow.workDir}
    exit status : ${workflow.exitStatus}
    Command line: ${workflow.commandLine}\u001B[0m
    """.stripIndent()
}

workflow.onError = {
    println "\u001B[41m\u001B[37mOops .. something when wrong.\u001B[0m"
}


